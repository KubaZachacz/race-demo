{"version":3,"sources":["assets/speedway.svg","utils.js","animation/animation.js","App.js","reportWebVitals.js","index.js"],"names":["getRandom","min","max","Math","ceil","floor","random","sBrowser","colorArray","getTime","milli","time","Date","minutes","getUTCMinutes","seconds","getUTCSeconds","getUTCMilliseconds","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","navigator","userAgent","indexOf","Player","id","sprite","track","viewBox","this","name","lastTrackPoint","x","y","trackPoint","position","rotation","yOffset","xOffset","velocity","maxVelocity","acceleration","collisionRadius","isDone","isFinish","laps","progress","isCollision","callback","startTime","offset","startPos","getPointAtLength","calculatePosition","PI","transformPosition","newOffset","divider","trackLength","getTotalLength","endTime","startRad","dx","dy","rad","atan2","ox","sin","cos","oy","init_x","width","init_y","height","pos_x","pos_y","style","transform","back","querySelector","backRotation","abs","querySelectorAll","forEach","el","opacity","Animation","objects","object","setTimeout","run","map","includes","onFinish","sort","a","b","i","length","collision","move","console","log","sqrt","PlayerCard","disabled","handlePrepare","oldPlayer","lp","useState","helmetColor","motorColor","player","setPlayer","handleNewChange","e","newPlayer","target","value","useEffect","randomPlayer","className","htmlFor","onChange","type","step","onClick","App","players","setPlayers","countDown","setCountdown","results","setResults","lastResult","setLastResult","isStared","setIsStarted","finishCallback","count","defaultValue","location","reload","animation","document","getElementById","start","data","speedway","source","contentDocument","svg","sourceSprite","baseVal","cloneNode","fill","appendChild","prepare","parseFloat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f1396476.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/speedway.dfa8e7b3.svg\";","export function getRandom(min, max) {\r\n\tmin = Math.ceil(min);\r\n\tmax = Math.floor(max);\r\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport const colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6',\r\n\t'#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\r\n\t'#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A',\r\n\t'#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\r\n\t'#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC',\r\n\t'#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\r\n\t'#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680',\r\n\t'#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\r\n\t'#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3',\r\n\t'#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\r\n\r\n\r\nexport const getTime = (milli) => {\r\n\tlet time = new Date(milli);\r\n\t// let hours = time.getUTCHours();\r\n\tlet minutes = time.getUTCMinutes();\r\n\tlet seconds = time.getUTCSeconds();\r\n\tif (seconds < 10) seconds = \"0\" + seconds;\r\n\tlet milliseconds = time.getUTCMilliseconds();\r\n\treturn minutes + \":\" + seconds + \":\" + milliseconds;\r\n}","import { getRandom, getTime } from './../utils';\r\nvar requestAnimationFrame = window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame;\r\n\r\nvar sBrowser, sUsrAg = navigator.userAgent;\r\n\r\nif (sUsrAg.indexOf(\"Firefox\") > -1) {\r\n    sBrowser = \"FF\";\r\n    // \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0\"\r\n}\r\n\r\nconst fps = 60;\r\n\r\nconst history = [];\r\nexport class Player {\r\n    constructor(id, sprite, track, viewBox) {\r\n        this.id = id;\r\n        this.name = \"\";\r\n        this.sprite = sprite;\r\n        this.track = track;\r\n        this.lastTrackPoint = {\r\n            x: null,\r\n            y: null\r\n        };\r\n        this.trackPoint = {\r\n            x: null,\r\n            y: null\r\n        };\r\n        this.position = {\r\n            x: null,\r\n            y: null\r\n        };\r\n        this.rotation = 0;\r\n        this.viewBox = viewBox;\r\n        this.yOffset = 0;\r\n        this.xOffset = 0;\r\n        this.velocity = 0;\r\n        this.maxVelocity = 3;\r\n        this.acceleration = 0.05;\r\n        this.collisionRadius = 11;\r\n        this.isDone = false;\r\n        this.isFinish = false;\r\n        this.laps = 0;\r\n        this.progress = 0;\r\n        this.isCollision = false;\r\n        this.time = 0;\r\n        this.callback = () => { };\r\n        this.startTime = null;\r\n    }\r\n\r\n    prepare(name, offset, maxVelocity, acceleration, callback) {\r\n        this.name = name;\r\n        this.maxVelocity = maxVelocity;\r\n        this.acceleration = acceleration;\r\n        this.callback = callback;\r\n\r\n        const startPos = this.track.getPointAtLength(0);\r\n\r\n        this.trackPoint = {\r\n            x: startPos.x,\r\n            y: startPos.y,\r\n        };\r\n\r\n        this.lastTrackPoint = { ...this.trackPoint };\r\n\r\n        this.yOffset = offset.y;\r\n        this.xOffset = offset.x;\r\n\r\n        this.calculatePosition(Math.PI);\r\n\r\n        this.transformPosition();\r\n    }\r\n\r\n    move() {\r\n        if (!this.startTime) this.startTime = new Date();\r\n\r\n        const minOffset = 2.5,\r\n            maxOffset = 120;\r\n\r\n        if (this.isCollision) {\r\n            this.velocity = this.velocity - this.acceleration\r\n        } else if (this.velocity < this.maxVelocity) {\r\n            this.velocity = this.velocity + this.acceleration;\r\n        }\r\n\r\n        if (this.velocity < 0) this.velocity = this.acceleration;\r\n\r\n        if (this.yOffset >= minOffset) {\r\n            let newOffset = this.yOffset - this.velocity / 15;\r\n\r\n            if (this.isCollision) {\r\n                newOffset = this.yOffset + this.velocity / 5;\r\n\r\n                if (newOffset > maxOffset) newOffset = this.yOffset - this.velocity / 5;\r\n            }\r\n            else if (this.rotation > -1 || this.rotation < -179) {\r\n                const divider = getRandom(35, 55);\r\n                newOffset = this.yOffset + this.velocity / divider;\r\n            }\r\n\r\n            if (newOffset < minOffset) newOffset = minOffset;\r\n            if (newOffset > maxOffset) newOffset = maxOffset;\r\n\r\n            this.yOffset = newOffset;\r\n        }\r\n\r\n        this.progress = this.progress + this.velocity;\r\n        const trackLength = this.track.getTotalLength();\r\n\r\n        if (this.progress > trackLength) {\r\n            this.progress = 0;\r\n            this.laps = this.laps - 1;\r\n        }\r\n\r\n        if (!this.isFinish && this.laps === 0) {\r\n            this.isFinish = true;\r\n            const endTime = new Date();\r\n            this.time = endTime - this.startTime\r\n            this.callback(this);\r\n        }\r\n\r\n        if (this.laps === 0 && this.progress > 75) {\r\n            this.isDone = true;\r\n            this.velocity = 0;\r\n\r\n            this.transformPosition();\r\n        }\r\n\r\n        if (!this.isDone) {\r\n            const trackPoint = this.track.getPointAtLength(this.progress);\r\n\r\n            this.trackPoint = {\r\n                x: trackPoint.x,\r\n                y: trackPoint.y,\r\n            };\r\n\r\n            this.calculatePosition();\r\n\r\n            this.lastTrackPoint = { ...this.trackPoint }\r\n\r\n            this.transformPosition();\r\n        }\r\n    }\r\n\r\n    calculatePosition(startRad) {\r\n        const dx = this.trackPoint.x - this.lastTrackPoint.x;\r\n        const dy = this.trackPoint.y - this.lastTrackPoint.y;\r\n\r\n        const rad = startRad || Math.atan2(dy, dx);\r\n        const ox = this.yOffset * Math.sin(Math.PI - rad) + this.xOffset * Math.cos(rad),\r\n            oy = - this.yOffset * Math.cos(Math.PI - rad) - this.xOffset * Math.sin(rad);\r\n\r\n        this.rotation = -(180 - rad * (180 / Math.PI));\r\n\r\n        this.position = {\r\n            x: this.trackPoint.x - ox,\r\n            y: this.trackPoint.y + oy,\r\n        };\r\n    }\r\n\r\n    transformPosition() {\r\n        const init_x = this.viewBox.width / 2,\r\n            init_y = (this.viewBox.height / 2),\r\n            pos_x = this.position.x - init_x,\r\n            pos_y = this.position.y - init_y;\r\n\r\n        this.sprite.style.transform = `translate(${pos_x}px, ${pos_y}px) rotate(${this.rotation}deg)`\r\n\r\n\r\n        if (sBrowser !== 'FF') {\r\n            const back = this.sprite.querySelector('.back');\r\n            let backRotation = 0;\r\n            const rotation = Math.abs(this.rotation + 180);\r\n    \r\n            if (rotation > 1 && rotation < 179) {\r\n                if (rotation > 20) backRotation = 20;\r\n                else if (rotation < -20) backRotation = -20;\r\n                else backRotation = rotation;\r\n            }\r\n    \r\n    \r\n            back.style.transform = `rotate(${-backRotation}deg)`;\r\n\r\n            const dust = this.sprite.querySelectorAll('.dust');\r\n            dust.forEach(el => {\r\n                el.style.opacity = this.velocity > 0 ? (getRandom(0, 3) / 10) : 0;\r\n            })\r\n    \r\n            const dustGroup = this.sprite.querySelector('.dust-group');\r\n            dustGroup.style.transform = `scale(${getRandom(10, 30) / 10})`\r\n    \r\n        }\r\n\r\n        // const helmet = this.sprite.querySelector('.helmet');\r\n        // console.log(`${helmet.getAttribute('cx')}px ${helmet.getAttribute('cy')}px`)\r\n        // back.style.transformOrigin = `${helmet.getAttribute('cx')}px ${helmet.getAttribute('cy')}px`;\r\n\r\n    }\r\n}\r\n\r\nexport class Animation {\r\n    constructor(objects) {\r\n        this.objects = objects;\r\n    }\r\n\r\n    start(laps) {\r\n        for (let object of this.objects) {\r\n            object.laps = laps;\r\n            object.progress = 0;\r\n            object.isDone = false;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            requestAnimationFrame(() => this.run());\r\n            // this.run();\r\n        }, 1000 / fps);\r\n    }\r\n\r\n    stop() {\r\n\r\n    }\r\n\r\n    run() {\r\n        const isDone = !this.objects.map(object => object.isDone).includes(false);\r\n\r\n        if (!isDone) {\r\n\r\n            const objects = [...this.objects];\r\n            objects.sort(function (a, b) { return a.progress - b.progress });\r\n            for (let i = 0; i < objects.length - 1; i++) {\r\n                const a = objects[i];\r\n                let isCollision = false;\r\n                // for (let b of objects) {\r\n                //     if (b.id !== a.id) {\r\n                const b = objects[i + 1];\r\n                if (collision(a, b)) {\r\n                    isCollision = true;\r\n                    // console.log(a.id, 'collide', b.id);\r\n                }\r\n                //     }\r\n                // }\r\n\r\n                a.isCollision = isCollision;\r\n\r\n                // if(isCollision) console.log(a.id,'collide with' ,b.id)\r\n            }\r\n\r\n            for (let object of this.objects) {\r\n                object.move();\r\n            }\r\n\r\n\r\n            setTimeout(() => {\r\n                requestAnimationFrame(() => this.run());\r\n            }, 1000 / fps);\r\n        } else {\r\n            this.onFinish();\r\n        }\r\n\r\n    }\r\n\r\n    // detectCollision() {\r\n    //     const objects = [...this.objects];\r\n    //     objects.sort(function (a, b) { return a.progress - b.progress });\r\n\r\n    //     for (let i = 0; i < objects.length - 1; i++) {\r\n    //         const a = objects[i];\r\n    //         const b = objects[i + i];\r\n\r\n    //         a.isCollision = collision(a, b);\r\n    //     }\r\n    // }\r\n\r\n    onFinish() {\r\n        const objects = [...this.objects];\r\n        objects.sort(function (a, b) { return a.progress - b.progress });\r\n\r\n        console.log('done');\r\n        // console.log(objects);\r\n    }\r\n};\r\n\r\nfunction collision(a, b) {\r\n    const dx = a.position.x - b.position.x;\r\n    const dy = a.position.y - b.position.y;\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (distance < a.collisionRadius + b.collisionRadius) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","import { useState, useEffect } from 'react';\nimport './App.scss';\nimport speedway from \"./assets/speedway.svg\";\nimport { Player, Animation } from './animation/animation';\nimport { colorArray, getRandom, getTime } from './utils';\n\nconst randomPlayer = (lp) => {\n  return {\n    name: `Player_${lp}`,\n    helmetColor: colorArray[getRandom(0, colorArray.length - 1)],\n    motorColor: colorArray[getRandom(0, colorArray.length - 1)],\n    maxVelocity: getRandom(55, 65) / 10,\n    acceleration: getRandom(5, 7) / 100,\n  }\n}\n\nconst PlayerCard = ({ disabled, handlePrepare, oldPlayer, lp }) => {\n  const [player, setPlayer] = useState({\n    name: \"\",\n    helmetColor: \"\",\n    motorColor: \"\",\n    maxVelocity: 0,\n    acceleration: 0,\n  })\n\n  const handleNewChange = (e) => {\n    const newPlayer = {\n      ...player\n    }\n\n    newPlayer[e.target.name] = e.target.value;\n\n    setPlayer(newPlayer);\n  }\n\n  useEffect(() => {\n    if (oldPlayer && !player.name) {\n      setPlayer(oldPlayer);\n    }\n    else {\n      setPlayer(randomPlayer(lp))\n    }\n  }, [oldPlayer])\n\n\n  return (\n    <div className=\"player-card\">\n      <div>\n        <label htmlFor=\"name\">Imię</label>\n        <input disabled={disabled} name=\"name\" value={player?.name} onChange={handleNewChange} />\n      </div>\n      <div className=\"row\">\n        <div className=\"\">\n          <label htmlFor=\"helmetColor\">Kask</label>\n          <input disabled={disabled} type=\"color\" id=\"helmetColor\" name=\"helmetColor\" value={player?.helmetColor} onChange={handleNewChange} />\n        </div>\n        <div className=\"\">\n          <label htmlFor=\"motorColor\">Motocykl</label>\n          <input disabled={disabled} type=\"color\" id=\"motorColor\" name=\"motorColor\" value={player?.motorColor} onChange={handleNewChange} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div>\n          <label htmlFor=\"motorColor\">Max prędkość</label>\n          <input disabled={disabled} type=\"number\" min=\"1\" max=\"20\" name=\"maxVelocity\" value={player?.maxVelocity} onChange={handleNewChange} step=\"0.1\" /></div>\n        <div>\n          <label htmlFor=\"motorColor\">Przyspieszenie</label>\n          <input disabled={disabled} type=\"number\" min=\"0.01\" max=\"1\" name=\"acceleration\" value={player?.acceleration} onChange={handleNewChange} step=\"0.01\" />\n        </div>\n      </div>\n      {!disabled && (\n        <div>\n          <button className=\"add-btn\" disabled={disabled} onClick={() => handlePrepare(player)}>Dodaj</button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n  const [countDown, setCountdown] = useState(0);\n  const [results, setResults] = useState([]);\n  const [lastResult, setLastResult] = useState(null);\n  const [isStared, setIsStarted] = useState(false);\n\n  useEffect(() => {\n    if (lastResult) {\n      setResults([...results, { ...lastResult }])\n    }\n  }, [lastResult])\n\n  const finishCallback = (player) => {\n    setLastResult({ ...player });\n  }\n\n  const handlePrepare = (newPlayer) => {\n    const sourceContainer = document.getElementById('source');\n    const source = sourceContainer.contentDocument;\n    const svg = source.querySelector('svg');\n\n    const track = source.querySelector('#track path');\n    const sourceSprite = source.querySelector('#player');\n\n    const viewBox = svg.viewBox.baseVal;\n\n    const sprite = sourceSprite.cloneNode(true);\n    sprite.id = `player_${players.length}`;\n\n    const { name, motorColor, helmetColor, acceleration, maxVelocity } = newPlayer;\n\n    const motorcycle = sprite.querySelectorAll('.motorcycle')\n    motorcycle.forEach((el) => {\n      el.style.fill = motorColor;\n    })\n\n    sprite.querySelector('.helmet').style.fill = helmetColor;\n\n    svg.appendChild(sprite);\n\n    const player = new Player(players.length, sprite, track, viewBox);\n\n    player.motorColor = motorColor;\n    player.helmetColor = helmetColor;\n\n    const offset = {\n      x: 25,\n      y: 10 + 30 * players.length\n    }\n\n    player.prepare(name, offset, parseFloat(maxVelocity), parseFloat(acceleration), finishCallback);\n\n    setPlayers([...players, player]);\n  }\n\n  const count = (value, callback) => {\n    if (value > 0) {\n      setCountdown(value - 1);\n      if (value - 1 > 0) {\n        setTimeout(() => {\n          count(value - 1, callback)\n        }, 1000)\n      }\n      else {\n        callback();\n      }\n    }\n  }\n\n  const handleStart = () => {\n    const animation = new Animation(players);\n    const laps = document.getElementById('laps').value;\n    setCountdown(3);\n    setIsStarted(true);\n    setTimeout(() => {\n      count(3, () => { animation.start(laps); })\n    }, 1000)\n  }\n\n  const handleRestart = () => {\n    window.location.reload();\n  }\n\n  const isFinish = isStared && results.length === players.length;\n\n  return (\n    <div className=\"App\">\n      <div className=\"row\">\n        <div className=\"panel\">\n          <label htmlFor=\"laps\">Okrążenia</label>\n          <input type=\"number\" name=\"laps\" id=\"laps\" defaultValue=\"1\" min=\"1\" max=\"10\" />\n          {isFinish ? (\n            <button className=\"start-btn\" onClick={handleRestart}>Restart</button>\n          ) : (\n              <button disabled={players.length < 1 || isStared} className=\"start-btn\" onClick={handleStart}>Start</button>\n            )}\n          <div className=\"results\">\n            {results.map(({ id, name, time }) => (\n              <p key={`result-${id}`}>{name} - {getTime(time)}</p>\n            )\n            )}\n          </div>\n        </div>\n        <div className=\"speedway\">\n          <object id=\"source\" data={speedway}></object>\n          {countDown > 0 && (\n            <div className=\"count-down\">{countDown}</div>\n          )}\n        </div>\n      </div>\n      <div className=\"control\">\n        <p className=\"title\">Zawodnik</p>\n        <div className=\"players-row\">\n          {players.map(player => <PlayerCard key={`card-${player.id}`} oldPlayer={player} disabled={true} />)}\n          {(!isStared && players.length < 4) && (\n            <PlayerCard key={`card-new-${players.length}`} lp={players.length + 1} disabled={false} handlePrepare={handlePrepare} />\n          )}\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}